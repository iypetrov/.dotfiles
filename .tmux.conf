# -- display ------------------------------------------------------------------
set -g history-limit 25000
unbind C-b
set -g prefix2 C-j
bind C-j send-prefix -2
set -g mouse on
set -s escape-time 0
set -sg repeat-time 600                   # increase repeat timeout
set -g focus-events on
set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

# -- display ------------------------------------------------------------------
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed
set -g set-titles on          # set terminal title
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time
set -g status-interval 1     # redraw status line every 1 seconds
set -g monitor-activity on
set -g visual-activity off

set -g @minimal-tmux-fg "#feffff"
set -g @minimal-tmux-bg "#62925d"
set -g @minimal-tmux-justify "left"
set -g @minimal-tmux-indicator-str "  tmux  "
set -g @minimal-tmux-indicator true
set -g @minimal-tmux-status "bottom"
set -g status-right-style "fg=#62925d,bold"

# Enables or disables the left and right status bar
set -g @minimal-tmux-right true
set -g @minimal-tmux-left false 

# expanded icon (fullscreen icon)
set -g @minimal-tmux-expanded-icon "󰊓 "

# on all tabs (default is false)
# false will make it visible for the current tab only
set -g @minimal-tmux-show-expanded-icons-for-all-tabs true

# To add or remove extra text in status bar
set -g @minimal-tmux-status-right-extra ""
set -g @minimal-tmux-status-left-extra ""

# To make the selection box rounded () or edged <>
# Default is nothing, when set to true default is edged
set -g @minimal-tmux-use-arrow false
set -g @minimal-tmux-right-arrow ""
set -g @minimal-tmux-left-arrow ""

# Not recommended to change these values
set -g @minimal-tmux-status-right "#S"
# set -g @minimal-tmux-status-left "#(~/scripts/tmux-status-aws-k8s.sh)"
set -g @minimal-tmux-status-left "PLACEHOLDER"

set -g status-left-length 100
set -g status-right-length 100

# -- copy mode ----------------------------------------------------------------
bind Enter copy-mode # enter copy mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | xclip -i -selection clipboard >/dev/null 0>&1"'
# copy to Wayland clipboard
if -b '[ "$XDG_SESSION_TYPE" = "wayland" ] && command -v wl-copy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | wl-copy"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - > /dev/clipboard"'


# -- buffers ------------------------------------------------------------------
# bind b list-buffers     # list paste buffers
# bind p paste-buffer -p  # paste from the top paste buffer
# bind P choose-buffer    # choose which buffer to paste from

# -- bind keys ----------------------------------------------------------------
bind-key -r r source-file ~/.tmux.conf
bind-key k kill-server

# bind-key -r v run-shell "tmux neww open -a MacVim ."
# bind-key -r v run-shell "tmux neww vim ."
bind-key -r g run-shell "tmux neww lazygit -ucf ~/.config/lazygit/config.yml -p ."
bind-key -r h run-shell "tmux neww ${XDG_DOCUMENTS_DIR}/projects/common/.dotfiles/scripts/tmux-last-session-switcher.sh"
bind-key -r f run-shell "tmux neww ${XDG_DOCUMENTS_DIR}/projects/common/.dotfiles/scripts/tmux-sessionizer.sh"

bind-key -r 0 run-shell "tmux neww docker run -it --rm fireplace"
bind-key -r 1 run-shell "tmux neww ${XDG_DOCUMENTS_DIR}/projects/common/.dotfiles/scripts/ssh-sessionizer.sh"
bind-key -r 4 run-shell "tmux neww ${XDG_DOCUMENTS_DIR}/projects/common/.dotfiles/scripts/profilionizer.sh"
bind-key -r 5 run-shell "tmux neww ${XDG_DOCUMENTS_DIR}/projects/common/.dotfiles/scripts/versionizer.sh"
bind-key -r 9 run-shell "tmux neww k9s"

# -- plugins ------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'niksingh710/minimal-tmux-status'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
